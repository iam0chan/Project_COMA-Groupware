<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chatting">
	<!-- resultMap -->
	<resultMap type="chattingRoom" id="chattingRoomMap">
		<id column="ROOM_NO" property="roomNo"/>
		<result column="ROOM_NAME" property="roomName"/>
		<result column="ROOM_PASSWORD_FLAG" property="roomPasswordFlag"/>
		<result column="ROOM_PASSWORD" property="roomPassword"/>
		<result column="ROOM_CREATE_DATE" property="roomCreateDate"/>		
		<association property="roomTypeObj" resultMap="chattingRoomTypeMap"/>
	</resultMap>
	
	<resultMap type="chattingMessage" id="chattingMessageMap">
		<id column="CHAT_NO" property="chatNo"/>
		<result column="CHAT_CONTENT" property="chatContent"/>
		<result column="CHAT_CREATE_DATE" property="chatCreateDate"/>
		<result column="EMP_ID" property="empId"/>
		<result column="ROOM_NO" property="roomNo"/>
		<association property="empObj" resultMap="emp.empMap"/>
		<association property="roomObj" resultMap="chattingRoomMap"/>
	</resultMap>
	
	<resultMap type="chattingRoomType" id="chattingRoomTypeMap">
		<id column="ROOM_TYPE" property="roomType"/>
		<result column="ROOM_TYPE_NAME" property="roomTypeName"/>
	</resultMap>
	
	<resultMap type="chattingJoin" id="chattingJoinMap">
		<association property="roomObj" resultMap="chattingRoomMap"/>
		<association property="empObj" resultMap="emp.empMap"/>
	</resultMap>
	
	
	
	<!-- select -->
	<select id="selectRoomList" resultMap="chattingRoomMap">
		SELECT * FROM CHAT_ROOM LEFT JOIN CHAT_ROOM_TYPE USING (ROOM_TYPE) ORDER BY ROOM_CREATE_DATE DESC 
	</select>
	<select id="selectRoomPasswordCheck" parameterType="map" resultMap="chattingRoomMap">
		SELECT * FROM CHAT_ROOM LEFT JOIN CHAT_ROOM_TYPE USING (ROOM_TYPE) WHERE ROOM_NO = #{roomNo} AND ROOM_PASSWORD = #{password}
	</select>
	
	<select id="selectCheckJoin" parameterType="map" resultMap="chattingJoinMap">
		SELECT * FROM CHAT_JOIN WHERE ROOM_NO = #{roomNo} AND EMP_ID = #{empId}
	</select>
	
	<!-- SELECT * FROM CHAT_JOIN LEFT JOIN EMP using(emp_id) WHERE ROOM_NO = 'CR_1060'; -->
	<select id="selectRoomMemberList" parameterType="string" resultMap="chattingJoinMap">
		SELECT * FROM CHAT_JOIN LEFT JOIN EMP USING(EMP_ID) JOIN JOB USING(JOB_CODE) WHERE ROOM_NO = #{roomNo}
	</select>
	
	<select id="selectChatRoomListByType" parameterType="string" resultMap="chattingRoomMap">
		SELECT * FROM CHAT_ROOM LEFT JOIN CHAT_ROOM_TYPE USING (ROOM_TYPE)
		<where>
			<if test="type!=null and type!='ALL'">
				ROOM_TYPE = #{type}
			</if>
		</where>
	</select>
	
	<select id="selectChatMessageByRoomNo" parameterType="string" resultMap="chattingMessageMap">
		SELECT * FROM CHAT_MESSAGE JOIN EMP USING(EMP_ID) JOIN CHAT_ROOM USING(ROOM_NO) WHERE ROOM_NO = #{roomNo} ORDER BY CHAT_CREATE_DATE ASC
	</select>
	
	<select id="selectRoomByRoomNo" parameterType="string" resultMap="chattingRoomMap">
		SELECT * FROM CHAT_ROOM LEFT JOIN CHAT_ROOM_TYPE USING (ROOM_TYPE) WHERE ROOM_NO = #{roomNo}	
	</select>
	
	<select id="selectEmpByEmpId" parameterType="string" resultMap="emp.empMap">
		SELECT * FROM EMP JOIN DEPT USING(DEPT_CODE) JOIN JOB USING (JOB_CODE)WHERE EMP_ID = #{empId}
	</select>
	
	
	<!-- insert -->
	<insert id="insertCreateRoom" parameterType="chattingRoom">
		<if test='roomPasswordFlag != null and roomPasswordFlag eq "Y"'>
			INSERT INTO CHAT_ROOM VALUES('CR_'||SEQ_CHATROOM_NO.NEXTVAL,#{roomName},#{roomTypeObj.roomType},#{roomPasswordFlag},#{roomPassword},SYSTIMESTAMP)
		</if>
		<if test='roomPasswordFlag != null and roomPasswordFlag eq "N"'>
			INSERT INTO CHAT_ROOM VALUES('CR_'||SEQ_CHATROOM_NO.NEXTVAL,#{roomName},#{roomTypeObj.roomType},#{roomPasswordFlag},NULL,SYSTIMESTAMP)
		</if>
	</insert>
	
	<insert id="insertJoinEmp" parameterType="map">
		<choose>
			<when test='roomNo!=null and roomNo!=""'> 
				INSERT INTO CHAT_JOIN(ROOM_NO,EMP_ID) VALUES (#{roomNo}, #{empId}) 
			</when>
			<otherwise>
				INSERT INTO CHAT_JOIN(ROOM_NO,EMP_ID) VALUES ('CR_'||SEQ_CHATROOM_NO.CURRVAL, #{empId})
			</otherwise>
		</choose>
	</insert>
	
	<insert id="insertChattingMessage" parameterType="java.util.List" >
		<!-- INSERT ALL INTO CHAT_MESSAGE(CHAT_NO,CHAT_CONTENT,CHAT_CREATE_DATE,EMP_ID,ROOM_NO) VALUES -->
		<!-- ('CM_'||SEQ_CHAT_NO.NEXTVAL,#{chatContent},#{chatCreateDate},#{empId},#{roomNo}) -->
		<foreach collection="list" item="msg" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL" index="index">
			INTO CHAT_MESSAGE VALUES ('CM_'||SEQ_CHAT_NO.NEXTVAL||#{index},#{msg.chatContent},#{msg.chatCreateDate},#{msg.empId},#{msg.roomNo})
		</foreach>	
		
	</insert>
	<!-- update -->
	
	<!-- delete -->
	
	<delete id="deleteChatRoomJoinEmpById" parameterType="map">
		DELETE CHAT_JOIN WHERE ROOM_NO = #{roomNo} and EMP_ID = #{empId}
	</delete>
	
</mapper>
